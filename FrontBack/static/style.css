/* static/style.css */
body {
    font-family: 'Arial', sans-serif;
    background-color: #EAE7F8; /* A light purple background */
    color: #333;
    margin: 0;
    padding: 0;
}

.header {
  background: #5D3FD3; /* A rich purple header */
  color: #fff;
  padding: 20px;
  text-align: center;
}

.main {
  background: #fff;
  padding: 20px;
  text-align: center;
  border: 2px solid #5D3FD3; /* Purple border for the content area */
}

.button {
  background-color: #7D5BD3; /* A soft purple button */
  color: #ffffff;
  padding: 10px 15px;
  border: none;
  border-radius: 5px; /* Rounded corners for the button */
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s ease;
}

.button:hover {
  background-color: #5D3FD3; /* Darker purple on hover */
}

/* Adjustments for the camera and audio icons */
.icon {
  fill: #5D3FD3; /* Purple color for the SVG icons */
  width: 50px; /* Or any size that fits your design */
  height: auto;
}

#videoPreview {
  width: 100%; /* Adjust size as needed */
  height: auto;
  border: 1px solid #5D3FD3; /* Optional border */
}

#recordingProgress {
  height: 20px; /* Set the height of the progress bar */
  background-color: #D3D3D3;
  color: #5D3FD3; /* Color of the progress */
}
progress[value]::-webkit-progress-value {
  background-color: #5D3FD3;
}
progress[value]::-webkit-progress-bar {
  background-color: #EAE7F8;
}



  /* Reset some default browser styles */
  body,
  h1,
  h2,
  h3,
  p,
  .button {
    margin: 0;
    padding: 0;
  }

  body {
    font-family: 'Arial', sans-serif;
    background-color: #F4F4F9;
    color: #333;
    line-height: 1.6;
    padding: 20px;
  }

  .header {
    background-color: #5D3FD3;
    color: #fff;
    padding: 40px 0;
    text-align: center;
  }

  .header h1 {
    margin-bottom: 10px;
    font-size: 2.5rem;
  }

  .header p {
    font-size: 1.2rem;
  }

  .section {
    padding: 40px 0;
  }

  .bg-light {
    background-color: #EAE7F8;
  }

  .container {
    width: 80%;
    margin: auto;
    overflow: hidden;
  }

  .steps {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
  }

  .step {
    flex: 1;
    min-width: 300px;
    margin: 20
  }


.button {
  background-color: #7D5BD3;
  /* A soft purple button */
  color: #ffffff;
  padding: 10px 20px;
  margin-top: 20px;
  /* Adds some space above the button */
  border: none;
  border-radius: 5px;
  /* Rounded corners for the button */
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s ease;
}

.button:hover {
  background-color: #5D3FD3;
  /* Darker purple on hover */
}


.plutchiks-wheel-image {
  max-width: 100%;
  /* Ensure the image is responsive and fits its container */
  height: auto;
  /* Maintain aspect ratio */
  display: block;
  /* Display block to allow for margin auto to work */
  margin: 20px auto;
  /* Center the image and add some space around it */
  border-radius: 8px;
  /* Optional: adds rounded corners to the image */
}

.flex-container {
  display: flex;
  align-items: center;
  /* Aligns items vertically in the center */
  justify-content: flex-start;
  /* Aligns items to the start of the container */
  gap: 20px;
  /* Adds space between the image and the text */
}

.plutchiks-wheel-image {
  flex: 1;
  /* Allows the image to grow */
  max-width: 50%;
  /* Limits image width to 50% of the flex container */
  height: auto;
  /* Maintain aspect ratio */
  border-radius: 8px;
  /* Optional: adds rounded corners to the image */
}

.flex-container p {
  flex: 2;
  /* Allows the text to take up more space than the image */
  margin: 0;
  /* Adjust as needed */
}

.video-size {
  width: 100%;
  /* Full width on smaller screens */
  max-width: 320px;
  /* Adjust maximum width as needed */
  height: auto;
}

@media (min-width: 600px) {
.video-size {
    width: 100%;
    /* This will make the video responsive to the flex container's width */
    max-height: 100%;
    /* Limit the video's height to not exceed its container's height */
  }

  .context-columns {
    flex-direction: column;
  }

  .visual-context,
  .audio-context {
    margin-bottom: 20px;
    align-items: center;
  }

  .charts-container {
    flex-direction: column;
  }
}

.container {
  display: flex;
  flex-direction: column;
  /* Stack items vertically */
  align-items: center;
  /* Center items horizontally */
  justify-content: center;
  /* Center items vertically (if the container has a fixed height) */
  text-align: center;
  /* Center-align the text */
}

.context-columns {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  text-align: center;
  justify-items: center;
  /* Align children to start at the same height */
  justify-content: space-between;
  /* Keep existing spacing */
  gap: 20px;
  /* Optional: adds space between columns */
}

.visual-context,
.audio-context {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: auto;
  top: 0; bottom: 0; right: 0; left: 0;  /* follow the parent's edges */
  
}

.screenshots-container {
  display: flex;
  justify-content: center;
  /* Center screenshots horizontally */
  gap: 20px;
  /* Space between screenshots */
}

.screenshot {
  flex: 1;
  /* Allow screenshots to grow and fill the container */
  max-width: 100%;
  /* Ensure screenshots are responsive */
  height: auto;
  /* Maintain aspect ratio */
  max-height: 100px;
  /* Optional: limit the height of the screenshots */
}

.combined-complex {
  text-align: center;
  justify-items: center;
  margin-top: 20px;
  margin-bottom: 20px;
  width: 400;
}

.combined-context {
  width: 50%;
  margin: auto;
  justify-content: center;
}

.charts-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* Center charts vertically */
  gap: 20px;
  /* Space between charts */
}

.chart {
  width: 100%;
  /* Adjust as needed */
  max-width: 800px;
  /* Adjust based on your design */
  margin-bottom: 20px;
}
.user-video {
  flex: 1.5;
  /* Allocate 50% more space to the video container */
}

.chart {
  flex: 1;
  /* Keep the chart container at the default size */
}

.context-columns {
  display: flex;
  /* This ensures that the children start off with equal width regardless of their content */
  align-items: stretch;
  /* This will make sure that both columns are of equal height */
}


.container-visualize {
  width: 90%;
  margin: auto;
  overflow: hidden;
}